[metadata]
format.version = "1.1"

[versions]
edc = "0.14.0-20250607-SNAPSHOT"
tractusx = "0.10.0-20250609-SNAPSHOT"
awaitility = "4.3.0"
httpMockServer = "5.15.0"
jackson = "2.19.1"
jakarta-json = "2.1.3"
restAssured = "5.5.5"
testcontainers = "1.21.3"

[libraries]
tx-edc-controlplane-postgresql-hashicorp-vault = { module = "org.eclipse.tractusx.edc:edc-controlplane-postgresql-hashicorp-vault", version.ref = "tractusx" }
tx-edc-dataplane-postgresql-hashicorp-vault = { module = "org.eclipse.tractusx.edc:edc-dataplane-hashicorp-vault", version.ref = "tractusx" }
tx-bdrs-client-spi = { module = "org.eclipse.tractusx.edc:bdrs-client-spi", version.ref = "tractusx" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-api-management-test-fixtures = { module = "org.eclipse.edc:management-api-test-fixtures", version.ref = "edc" }
edc-api-management-dataplaneselector = { module = "org.eclipse.edc:data-plane-selector-api", version.ref = "edc" }
edc-lib-cryptocommon = { module = "org.eclipse.edc:crypto-common-lib", version.ref = "edc" }
edc-spi-sts = { module = "org.eclipse.edc:sts-spi", version.ref = "edc" }
edc-sql-test-fixtures = { module = "org.eclipse.edc:sql-test-fixtures", version.ref = "edc" }
edc-sql-transactionlocal = { module = "org.eclipse.edc:transaction-local", version.ref = "edc" }

edc-bom-identityhub = { module = "org.eclipse.edc:identityhub-bom", version.ref = "edc" }
edc-ih-spi = { module = "org.eclipse.edc:identity-hub-spi", version.ref = "edc" }
edc-ih-spi-participant-context = { module = "org.eclipse.edc:participant-context-spi", version.ref = "edc" }
edc-ih-spi-credentials = { module = "org.eclipse.edc:verifiable-credential-spi", version.ref = "edc" }
edc-ih-spi-did = { module = "org.eclipse.edc:did-spi", version.ref = "edc" }
edc-lib-jws2020 = { module = "org.eclipse.edc:jws2020-lib", version.ref = "edc" }

jakarta-json-api = { module = "jakarta.json:jakarta.json-api", version.ref = "jakarta-json" }
jackson-datatype-jakarta-jsonp = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jakarta-jsonp", version.ref = "jackson" }
restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
mockserver-client = { module = "org.mock-server:mockserver-client-java", version.ref = "httpMockServer" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "httpMockServer" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

[plugins]
shadow = { id = "com.gradleup.shadow", version = "8.3.8" }
docker = { id = "com.bmuschko.docker-remote-api", version = "9.4.0" }
